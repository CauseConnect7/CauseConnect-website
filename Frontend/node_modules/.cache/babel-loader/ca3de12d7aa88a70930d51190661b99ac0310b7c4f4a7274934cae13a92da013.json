{"ast":null,"code":"var _jsxFileName = \"/Users/jase/Documents/DEMO/Frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [profileComplete, setProfileComplete] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // 检查用户个人资料状态\n  const checkProfileStatus = async token => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/profile/status\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"个人资料状态响应:\", data);\n        return data.isComplete;\n      }\n      return false;\n    } catch (error) {\n      console.error(\"❌ 检查个人资料状态失败:\", error);\n      return false;\n    }\n  };\n  useEffect(() => {\n    const initAuth = async () => {\n      setLoading(true);\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        try {\n          const payload = JSON.parse(atob(token.split(\".\")[1]));\n          setUser(payload);\n\n          // 检查用户个人资料状态\n          const isComplete = await checkProfileStatus(token);\n          setProfileComplete(isComplete);\n        } catch (error) {\n          console.error(\"❌ Token 解析失败:\", error);\n          localStorage.removeItem(\"token\");\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async token => {\n    console.log(\"AuthContext: 开始处理登录...\");\n    if (!token) {\n      console.error(\"❌ AuthContext: 无效的 token\");\n      throw new Error(\"Invalid token\");\n    }\n    try {\n      localStorage.setItem(\"token\", token);\n      console.log(\"AuthContext: Token已保存到localStorage\");\n\n      // 解析 token\n      const parts = token.split(\".\");\n      if (parts.length !== 3) {\n        throw new Error(\"Invalid token format\");\n      }\n      const payload = JSON.parse(atob(parts[1]));\n      console.log(\"AuthContext: Token解析成功:\", payload);\n      setUser(payload);\n      console.log(\"AuthContext: 用户状态已更新\");\n\n      // 检查用户个人资料状态\n      const isComplete = await checkProfileStatus(token);\n      setProfileComplete(isComplete);\n      console.log(\"AuthContext: 个人资料状态已更新:\", isComplete);\n      return isComplete;\n    } catch (error) {\n      console.error(\"❌ Token 处理错误:\", error);\n      localStorage.removeItem(\"token\");\n      throw new Error(\"Failed to process token\");\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    setProfileComplete(false);\n    navigate(\"/signin\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      profileComplete,\n      loading,\n      login,\n      logout,\n      checkProfileStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ZCidrPmdMVYh17IE5H//l15M76o=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","profileComplete","setProfileComplete","loading","setLoading","navigate","checkProfileStatus","token","response","fetch","method","headers","Authorization","ok","data","json","console","log","isComplete","error","initAuth","localStorage","getItem","payload","JSON","parse","atob","split","removeItem","login","Error","setItem","parts","length","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/jase/Documents/DEMO/Frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [profileComplete, setProfileComplete] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // 检查用户个人资料状态\n  const checkProfileStatus = async (token) => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/profile/status\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"个人资料状态响应:\", data);\n        return data.isComplete;\n      }\n      return false;\n    } catch (error) {\n      console.error(\"❌ 检查个人资料状态失败:\", error);\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    const initAuth = async () => {\n      setLoading(true);\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        try {\n          const payload = JSON.parse(atob(token.split(\".\")[1]));\n          setUser(payload);\n\n          // 检查用户个人资料状态\n          const isComplete = await checkProfileStatus(token);\n          setProfileComplete(isComplete);\n        } catch (error) {\n          console.error(\"❌ Token 解析失败:\", error);\n          localStorage.removeItem(\"token\");\n        }\n      }\n      setLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (token) => {\n    console.log(\"AuthContext: 开始处理登录...\");\n    if (!token) {\n      console.error(\"❌ AuthContext: 无效的 token\");\n      throw new Error(\"Invalid token\");\n    }\n\n    try {\n      localStorage.setItem(\"token\", token);\n      console.log(\"AuthContext: Token已保存到localStorage\");\n\n      // 解析 token\n      const parts = token.split(\".\");\n      if (parts.length !== 3) {\n        throw new Error(\"Invalid token format\");\n      }\n\n      const payload = JSON.parse(atob(parts[1]));\n      console.log(\"AuthContext: Token解析成功:\", payload);\n\n      setUser(payload);\n      console.log(\"AuthContext: 用户状态已更新\");\n\n      // 检查用户个人资料状态\n      const isComplete = await checkProfileStatus(token);\n      setProfileComplete(isComplete);\n      console.log(\"AuthContext: 个人资料状态已更新:\", isComplete);\n\n      return isComplete;\n    } catch (error) {\n      console.error(\"❌ Token 处理错误:\", error);\n      localStorage.removeItem(\"token\");\n      throw new Error(\"Failed to process token\");\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    setProfileComplete(false);\n    navigate(\"/signin\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        profileComplete,\n        loading,\n        login,\n        logout,\n        checkProfileStatus,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}